I also decided to make a couple of interesting bots in the Telegram messenger.
They are not so large-scale, but I got an interesting experience understanding this issue.
To make these bots work, I used pytelegrambotapi and some other modules. 
1) Echo. This bot simply responds with the same message that the user wrote to the bot.
2) Wiki. This bot works as follows. The user writes a word, and the bot responds with the first 1000 symbols. All data is taken from wikipedia.
Unfortunately, when the language is English, there are many problems. However, when I tested the Russian and German languages, there were no particular problems.
3) A or B. This is a bot that has two virtual buttons (for example Facts and Jokes). When the user clicks on the necessary button, he receives an answer corresponding to his request
The main way of working is that the bot owner must have a txt file with the desired text. These files should contain one sentence on each line.
Then the bot will select one of the lines in the file to send its contents to the user until all the lines are used. 
4) Auto post in channel. The work of this bot is identical to the work of the past. The admin has a txt file with the necessary information,
but in this case the bot will automatically send information from the file with the specified delay. For example, a random joke every 30 minutes
5) Chat_bot. The latest bot - chat bot. Unfortunately, I was never able to fully test it, because I didn't have time to create a large txt file for potential bot responses.
In this case you have to use fuzzywuzzy module which allows you to compare how similar two lines are to each other.
This is not artificial intelligence and its set of answers is limited to phrases from your txt file.